OBJECT Table 50500 PSM Setup
{
  OBJECT-PROPERTIES
  {
    Date=17/11/14;
    Time=[ 8:43:13];
    Modified=Yes;
    Version List=PSM 0.1;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10         }
    { 2   ;   ;Servername          ;Text30         }
    { 3   ;   ;Username            ;Text50         }
    { 4   ;   ;Password            ;Text30        ;ExtendedDatatype=Masked }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Codeunit 50500 PSM Powershell Wrapper
{
  OBJECT-PROPERTIES
  {
    Date=17/11/14;
    Time=12:19:58;
    Modified=Yes;
    Version List=PSM 0.1;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      RemoteRunspace@1100084011 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.Runspaces.Runspace" SUPPRESSDISPOSE;
      PowerShellSession@1100084000 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.PowerShell";
      DisableThrowException@1100084001 : Boolean;

    PROCEDURE OpenRunspace@1100084001(serverName@1100084006 : Text;userName@1100084009 : Text;password@1100084012 : Text);
    VAR
      text_schema@1100084000 : TextConst 'ENU=http://schemas.microsoft.com/powershell/Microsoft.PowerShell';
      Uri@1100084001 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Uri";
      text_uriFormat@1100084002 : TextConst 'ENU=http://%1:5985/wsman';
      SecureString@1100084005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Security.SecureString";
      PSCredential@1100084007 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.PSCredential";
      WSManConnectionInfo@1100084010 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.Runspaces.WSManConnectionInfo" SUPPRESSDISPOSE;
      AuthenticationMechanism@1100084008 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.Runspaces.AuthenticationMechanism" SUPPRESSDISPOSE;
      RunspaceFactory@1100084011 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.Runspaces.RunspaceFactory" SUPPRESSDISPOSE;
    BEGIN
      Uri     := Uri.Uri(STRSUBSTNO(text_uriFormat, serverName));

      CreateSecurePassword(password, SecureString);
      PSCredential := PSCredential.PSCredential(userName, SecureString);

      WSManConnectionInfo                         := WSManConnectionInfo.WSManConnectionInfo(Uri, text_schema, PSCredential);
      //WSManConnectionInfo.AuthenticationMechanism := AuthenticationMechanism.Kerberos;
      //WSManConnectionInfo.ProxyAuthentication     := AuthenticationMechanism.Negotiate;

      RemoteRunspace := RunspaceFactory.CreateRunspace(WSManConnectionInfo);
      RemoteRunspace.Open();

      PowerShellSession          := PowerShellSession.Create();
      PowerShellSession.Runspace := RemoteRunspace;
    END;

    LOCAL PROCEDURE CreateSecurePassword@1100084010(password@1100084000 : Text;VAR SecureString@1100084001 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Security.SecureString");
    VAR
      singleChar@1100084003 : Char;
      loop@1100084002 : Integer;
    BEGIN
      SecureString := SecureString.SecureString();
      FOR loop := 1 TO STRLEN(password) DO BEGIN
        EVALUATE(singleChar, COPYSTR(password, loop, 1));
        SecureString.AppendChar(singleChar);
      END;
    END;

    PROCEDURE CloseRunspace@1100084005();
    BEGIN
      RemoteRunspace.Close;
    END;

    PROCEDURE LoadModule@1100084009(Ps1Path@1100084000 : Text);
    VAR
      PSMPsObjectCollection@1100084001 : Codeunit 50502;
    BEGIN
      SetThrowException(FALSE);

      AddCommand(Ps1Path);
      InvokeCommands(PSMPsObjectCollection);

      SetThrowException(TRUE);
    END;

    PROCEDURE AddCommand@1100084000(cmdlet@1100084000 : Text);
    BEGIN
      PowerShellSession.AddCommand(cmdlet);
    END;

    PROCEDURE AddParameter@1100084002(parameter@1100084000 : Text);
    BEGIN
      PowerShellSession.AddParameter(parameter);
    END;

    PROCEDURE AddParameterWithValue@1100084003(parameter@1100084000 : Text;value@1100084001 : Text);
    BEGIN
      PowerShellSession.AddParameter(parameter, value);
    END;

    PROCEDURE AddScript@1100084004(script@1100084000 : Text);
    BEGIN
      PowerShellSession.AddScript(script);
    END;

    PROCEDURE ClearCommands@1100084006();
    BEGIN
      PowerShellSession.Commands.Clear();
    END;

    PROCEDURE ClearErrors@1100084007();
    BEGIN
      PowerShellSession.Streams.Error.Clear();
    END;

    PROCEDURE InvokeCommands@1100084015(VAR PSMPsObjectCollection@1100084003 : Codeunit 50502);
    VAR
      IAsyncResult@1100084002 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IAsyncResult";
      PSDataCollection@1100084005 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.PSDataCollection`1" WITHEVENTS;
    BEGIN
      PowerShellSession.Streams.ClearStreams();
      ClearErrors();

      IAsyncResult     := PowerShellSession.BeginInvoke();
      PSDataCollection := PowerShellSession.EndInvoke(IAsyncResult);

      ClearCommands();

      IF (NOT DisableThrowException) THEN
        ProcessError();

      PSMPsObjectCollection.SetObjectCollection(PSDataCollection);
    END;

    LOCAL PROCEDURE ProcessError@1100084008();
    VAR
      ErrorCollection@1100084004 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.IEnumerator";
      ErrorLoop@1100084001 : Integer;
      ErrorRecord@1100084002 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.ErrorRecord" SUPPRESSDISPOSE;
      ErrorText@1100084003 : Text;
    BEGIN
      IF (PowerShellSession.Streams.Error.Count = 0) THEN
        EXIT;

      ErrorCollection := PowerShellSession.Streams.Error.ReadAll().GetEnumerator();
      WHILE (ErrorCollection.MoveNext) DO BEGIN
        ErrorRecord := ErrorCollection.Current;
        ErrorText := ErrorText + ErrorRecord.Exception.Message + '\\';
      END;

      ERROR(ErrorText);
    END;

    PROCEDURE SetThrowException@1100084011(Throw@1100084000 : Boolean);
    BEGIN
      DisableThrowException := NOT Throw;
    END;

    EVENT RemoteRunspace@1100084011::StateChanged@49(sender@1100084001 : Variant;e@1100084000 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.Runspaces.RunspaceStateEventArgs");
    BEGIN
    END;

    EVENT RemoteRunspace@1100084011::AvailabilityChanged@50(sender@1100084001 : Variant;e@1100084000 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.Runspaces.RunspaceAvailabilityEventArgs");
    BEGIN
    END;

    EVENT PowerShellSession@1100084000::InvocationStateChanged@54(sender@1100084001 : Variant;e@1100084000 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.PSInvocationStateChangedEventArgs");
    BEGIN
    END;

    BEGIN
    END.
  }
}

OBJECT Codeunit 50502 PSM PsObject Collection
{
  OBJECT-PROPERTIES
  {
    Date=20/11/14;
    Time=23:23:53;
    Modified=Yes;
    Version List=PSM 0.1;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      PsObjects@1100084000 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.PSDataCollection`1";
      CurrentObjectNr@1100084001 : Integer;
      PSObject@1100084002 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.PSObject";
      IEnumerator@1100084003 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.IEnumerator";
      error_EmptyCollection@1100084004 : TextConst 'ENU=Empty PsObject Collection';
      error_PsObjectNotAssigned@1100084005 : TextConst 'ENU=PSObject not assigned, NULL.';
      error_wrongposition@1100084006 : TextConst 'ENU=Position invalid';

    PROCEDURE SetObjectCollection@1100084000(VAR PsObjectCollection@1100084000 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.PSDataCollection`1");
    BEGIN
      PsObjects       := PsObjectCollection;
      IEnumerator     := PsObjectCollection.GetEnumerator;
      CurrentObjectNr := 1;
    END;

    PROCEDURE GetPsObject@1100084009(VAR PSObjectReturn@1100084000 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.PSObject");
    BEGIN
      PSObjectReturn := PSObject;
    END;

    PROCEDURE SetPsObject@1100084015(PSObjectInstance@1100084000 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.PSObject");
    BEGIN
      PSObject := PSObjectInstance;
    END;

    LOCAL PROCEDURE FindPsObject@1100084006();
    VAR
      loop@1100084000 : Integer;
    BEGIN
      RESET;
      FOR loop := 1 TO CurrentObjectNr DO
        IEnumerator.MoveNext;

      PSObject := IEnumerator.Current;
    END;

    PROCEDURE RESET@1100084012();
    BEGIN
      IEnumerator.Reset;
    END;

    PROCEDURE COUNT@1100084002() : Integer;
    BEGIN
      IF (ISNULL(PsObjects)) THEN
        EXIT(0);

      EXIT(PsObjects.Count);
    END;

    PROCEDURE ISEMPTY@1100084008() : Boolean;
    BEGIN
      EXIT(COUNT = 0);
    END;

    PROCEDURE NEXT@1100084004() : Integer;
    BEGIN
      IF (COUNT = 0) THEN
        EXIT(0);

      CurrentObjectNr += 1;
      IF (CurrentObjectNr > COUNT) THEN
        EXIT(0);

      FindPsObject();
      EXIT(COUNT - CurrentObjectNr + 1);
    END;

    PROCEDURE FINDFIRST@1100084005() : Boolean;
    BEGIN
      IF (COUNT = 0) THEN
        ERROR(error_EmptyCollection);

      CurrentObjectNr := 1;
      FindPsObject();
      EXIT(TRUE);
    END;

    PROCEDURE SETPOSITION@1100084013(Position@1100084000 : Integer);
    BEGIN
      IF (Position > COUNT) OR (COUNT = 0) OR (Position < 0) THEN
        ERROR(error_wrongposition);

      CurrentObjectNr := Position;
      FindPsObject();
    END;

    PROCEDURE GetProperties@1100084010(VAR PsPropertyInfoArray@1100084001 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      PSMPsMemberInfoCollection@1100084000 : Codeunit 50503;
    BEGIN
      IF (ISNULL(PSObject)) THEN
        ERROR(error_PsObjectNotAssigned);

      PSMPsMemberInfoCollection.GetProperties(PSObject, PsPropertyInfoArray);
    END;

    PROCEDURE SetPropertyValue@1100084011(PropertyName@1100084000 : Text;VAR Value@1100084001 : Variant);
    VAR
      PSPropertyInfo@1100084002 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.PSPropertyInfo";
      PSMPsMemberInfoCollection@1100084003 : Codeunit 50503;
    BEGIN
      IF (ISNULL(PSObject)) THEN
        ERROR(error_PsObjectNotAssigned);

      //PSObject.Properties = predicate = can't be declared or used in NAV
      PSMPsMemberInfoCollection.GetProperty(PSObject, PropertyName, PSPropertyInfo);

      IF ISNULL(PSPropertyInfo) THEN
        Value := ''
      ELSE
        IF PSPropertyInfo.IsGettable THEN
          Value := PSPropertyInfo.Value
        ELSE
          Value := '';
    END;

    PROCEDURE GetPropertyValueText@1100084025(PropertyName@1100084000 : Text) : Text;
    VAR
      PSPropertyInfo@1100084001 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.PSPropertyInfo";
      tempVariant@1100084003 : Variant;
    BEGIN
      SetPropertyValue(PropertyName,tempVariant);
      EXIT(FORMAT(tempVariant));
    END;

    PROCEDURE GetPropertyValueInteger@1100084001(PropertyName@1100084000 : Text) : Integer;
    VAR
      tempVariant@1100084001 : Variant;
    BEGIN
      SetPropertyValue(PropertyName,tempVariant);
      EXIT(tempVariant);
    END;

    PROCEDURE GetPropertyValueBoolean@1100084003(PropertyName@1100084000 : Text) : Boolean;
    VAR
      tempVariant@1100084001 : Variant;
    BEGIN
      SetPropertyValue(PropertyName,tempVariant);
      EXIT(tempVariant);
    END;

    PROCEDURE GetPropertyValueDate@1100084007(PropertyName@1100084000 : Text) : Date;
    VAR
      tempVariant@1100084001 : Variant;
    BEGIN
      SetPropertyValue(PropertyName,tempVariant);
      EXIT(tempVariant);
    END;

    EVENT PsObjects@1100084000::DataAdding@38(sender@1100084001 : Variant;e@1100084000 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.DataAddingEventArgs");
    BEGIN
    END;

    EVENT PsObjects@1100084000::DataAdded@39(sender@1100084001 : Variant;e@1100084000 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.DataAddedEventArgs");
    BEGIN
    END;

    EVENT PsObjects@1100084000::Completed@40(sender@1100084001 : Variant;e@1100084000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.EventArgs");
    BEGIN
    END;

    BEGIN
    END.
  }
}

OBJECT Codeunit 50503 PSM PsMemberInfo Collection
{
  OBJECT-PROPERTIES
  {
    Date=17/11/14;
    Time=10:40:34;
    Modified=Yes;
    Version List=PSM 0.1;
  }
  PROPERTIES
  {
    SingleInstance=Yes;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      NAVPsPropertyAssembly@1100084000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Reflection.Assembly";

    LOCAL PROCEDURE Initialize@1100084002();
    BEGIN
      IF (NOT ISNULL(NAVPsPropertyAssembly)) THEN
        EXIT;

      CreateAssembly(CreateAssemblyCode, NAVPsPropertyAssembly);
    END;

    LOCAL PROCEDURE CreateAssembly@1100084003(CodeSnippet@1100084005 : Text;VAR ResultAssembly@1100084004 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Reflection.Assembly");
    VAR
      CodeSnippetCompileUnit@1100084000 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.CodeDom.CodeSnippetCompileUnit";
      CSharpCodeProvider@1100084001 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.Microsoft.CSharp.CSharpCodeProvider";
      CompilerParameters@1100084002 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.CodeDom.Compiler.CompilerParameters";
      CompilerResults@1100084003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.CodeDom.Compiler.CompilerResults";
      CodeSnippetCompileUnitArray@1100084006 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array";
    BEGIN

      CodeSnippetCompileUnit := CodeSnippetCompileUnit.CodeSnippetCompileUnit(CodeSnippet);

      CSharpCodeProvider := CSharpCodeProvider.CSharpCodeProvider;

      CompilerParameters := CompilerParameters.CompilerParameters;

      CompilerParameters.ReferencedAssemblies.Add('System.dll');
      CompilerParameters.ReferencedAssemblies.Add('System.Core.dll');
      CompilerParameters.ReferencedAssemblies.Add('C:\Windows\assembly\GAC_MSIL\System.Management.Automation\1.0.0.0__31bf3856ad364e35\System.Management.Automation.dll');

      CompilerParameters.GenerateInMemory := TRUE;

      CodeSnippetCompileUnitArray := CodeSnippetCompileUnitArray.CreateInstance(GETDOTNETTYPE(CodeSnippetCompileUnit),1);
      CodeSnippetCompileUnitArray.SetValue(CodeSnippetCompileUnit, 0);

      CompilerResults := CSharpCodeProvider.CompileAssemblyFromDom(CompilerParameters, CodeSnippetCompileUnitArray);

      ResultAssembly := CompilerResults.CompiledAssembly;
    END;

    LOCAL PROCEDURE CreateAssemblyCode@1100084000() : Text;
    VAR
      SystemTextStringBuilder@1100084000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Text.StringBuilder";
    BEGIN
      SystemTextStringBuilder := SystemTextStringBuilder.StringBuilder;

      SystemTextStringBuilder.AppendLine('using System;');
      SystemTextStringBuilder.AppendLine('using System.Collections.Generic;');
      SystemTextStringBuilder.AppendLine('using System.Linq;');

      SystemTextStringBuilder.AppendLine('namespace NAVMgtAPI.PowerShell');
      SystemTextStringBuilder.AppendLine('{');
      SystemTextStringBuilder.AppendLine('    using System.Management.Automation;');
      SystemTextStringBuilder.AppendLine('    public class NAVPsProperty');
      SystemTextStringBuilder.AppendLine('    {');
      SystemTextStringBuilder.AppendLine('        public NAVPsProperty()');
      SystemTextStringBuilder.AppendLine('        {');
      SystemTextStringBuilder.AppendLine('        }');
      SystemTextStringBuilder.AppendLine('        public PSPropertyInfo GetProperty(PSObject psObject, String propertyName)');
      SystemTextStringBuilder.AppendLine('        {');
      SystemTextStringBuilder.AppendLine('            return psObject.Properties.FirstOrDefault(x => x.Name.ToUpper() == propertyName.ToUpper());');
      SystemTextStringBuilder.AppendLine('        }');

      SystemTextStringBuilder.AppendLine('        public IEnumerable<PSPropertyInfo> GetProperties(PSObject psObject)');
      SystemTextStringBuilder.AppendLine('        {');
      SystemTextStringBuilder.AppendLine('            return psObject.Properties.ToArray();');
      SystemTextStringBuilder.AppendLine('        }');

      SystemTextStringBuilder.AppendLine('    }');
      SystemTextStringBuilder.AppendLine('};');

      EXIT(SystemTextStringBuilder.ToString());
    END;

    PROCEDURE GetProperty@1100084011(PSObject@1100084003 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.PSObject";PropertyName@1100084004 : Text;VAR ReturnPsPropertyInfo@1100084005 : DotNet "'System.Management.Automation, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.PSPropertyInfo");
    VAR
      Type@1100084001 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Type";
      SystemObject@1100084008 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Object";
      Activator@1100084007 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Activator";
      MethodInfo@1100084009 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Reflection.MethodInfo";
      ParamArray@1100084010 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array";
    BEGIN
      Initialize;

      Type := NAVPsPropertyAssembly.GetType('NAVMgtAPI.PowerShell.NAVPsProperty');
      SystemObject := Activator.CreateInstance(Type);
      MethodInfo := Type.GetMethod('GetProperty');

      ParamArray := ParamArray.CreateInstance(GETDOTNETTYPE(SystemObject),2);

      ParamArray.SetValue(PSObject, 0);
      ParamArray.SetValue(PropertyName, 1);

      ReturnPsPropertyInfo := MethodInfo.Invoke(SystemObject, ParamArray);
    END;

    PROCEDURE GetProperties@1100084004(PSObject@1100084000 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.PSObject";VAR PsPropertyInfoArray@1100084001 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      Type@1100084006 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Type";
      SystemObject@1100084005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Object";
      Activator@1100084004 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Activator";
      MethodInfo@1100084003 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Reflection.MethodInfo";
      ParamArray@1100084002 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array";
    BEGIN
      Initialize;

      Type := NAVPsPropertyAssembly.GetType('NAVMgtAPI.PowerShell.NAVPsProperty');
      SystemObject := Activator.CreateInstance(Type);
      MethodInfo := Type.GetMethod('GetProperties');

      ParamArray := ParamArray.CreateInstance(GETDOTNETTYPE(SystemObject),1);
      ParamArray.SetValue(PSObject, 0);

      PsPropertyInfoArray := MethodInfo.Invoke(SystemObject, ParamArray);
    END;

    BEGIN
    END.
  }
}

OBJECT Codeunit 50504 PSM Example
{
  OBJECT-PROPERTIES
  {
    Date=12/12/14;
    Time=10:02:25;
    Modified=Yes;
    Version List=PSM 0.1;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            GetNAVServerInstanceExampleWithWrapper
          END;

  }
  CODE
  {

    LOCAL PROCEDURE GetServiceExample@1100084000();
    VAR
      PSMPowershellWrapper@1100084000 : Codeunit 50500;
      PSMPsObjectCollection@1100084002 : Codeunit 50502;
      PSObjectReturn@1100084001 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.PSObject";
      PSMSetup@1100084003 : Record 50500;
    BEGIN
      PSMSetup.GET;

      WITH PSMPowershellWrapper DO BEGIN
        OpenRunspace(PSMSetup.Servername,PSMSetup.Username,PSMSetup.Password);

        AddCommand('get-service');
        AddParameterWithValue('name','*NAV*');

        InvokeCommands(PSMPsObjectCollection);

        IF (PSMPsObjectCollection.FINDFIRST) THEN BEGIN
          REPEAT
            MESSAGE(PSMPsObjectCollection.GetPropertyValueText('Name') + '-' + PSMPsObjectCollection.GetPropertyValueText('Status'));
          UNTIL PSMPsObjectCollection.NEXT < 1;
        END;

        CloseRunspace();

      END;
    END;

    LOCAL PROCEDURE GetNAVServerInstanceExample@1100084005();
    VAR
      PSMPsObjectCollection@1100084002 : Codeunit 50502;
      PSObjectReturn@1100084001 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.PSObject";
      PSMPowershellWrapper@1100084000 : Codeunit 50500;
      PSMSetup@1100084003 : Record 50500;
    BEGIN
      PSMSetup.GET;

      WITH PSMPowershellWrapper DO BEGIN
        OpenRunspace(PSMSetup.Servername,PSMSetup.Username,PSMSetup.Password);

        LoadModule('C:\Program Files\Microsoft Dynamics NAV\80\Service\NavAdminTool.ps1');

        AddCommand('get-NAVServerInstance');
        InvokeCommands(PSMPsObjectCollection);

        IF (PSMPsObjectCollection.FINDFIRST) THEN REPEAT
          MESSAGE(PSMPsObjectCollection.GetPropertyValueText('ServerInstance') + '-' + PSMPsObjectCollection.GetPropertyValueText('State'));
        UNTIL PSMPsObjectCollection.NEXT < 1;

        CloseRunspace();

      END;
    END;

    LOCAL PROCEDURE GetNAVCompanyExample@1100084002();
    VAR
      PSMPsObjectCollection@1100084002 : Codeunit 50502;
      PSObjectReturn@1100084001 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.PSObject";
      PSMPowershellWrapper@1100084000 : Codeunit 50500;
      PSMSetup@1100084003 : Record 50500;
    BEGIN
      PSMSetup.GET;

      WITH PSMPowershellWrapper DO BEGIN
        OpenRunspace(PSMSetup.Servername,PSMSetup.Username,PSMSetup.Password);

        LoadModule('C:\Program Files\Microsoft Dynamics NAV\80\Service\NavAdminTool.ps1');

        AddCommand('get-NAVServerInstance');
        AddCommand('get-NAVTenant');
        AddCommand('get-NAVCompany');

        InvokeCommands(PSMPsObjectCollection);

        IF (PSMPsObjectCollection.FINDFIRST) THEN REPEAT
          MESSAGE(PSMPsObjectCollection.GetPropertyValueText('CompanyName'));
        UNTIL PSMPsObjectCollection.NEXT < 1;

        CloseRunspace();

      END;
    END;

    LOCAL PROCEDURE GetNAVCompanyExample2@1100084013();
    VAR
      PSMPsObjectCollection@1100084002 : Codeunit 50502;
      PSObjectReturn@1100084001 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.PSObject";
      PSMPowershellWrapper@1100084000 : Codeunit 50500;
      PSMSetup@1100084003 : Record 50500;
    BEGIN
      PSMSetup.GET;

      WITH PSMPowershellWrapper DO BEGIN
        OpenRunspace(PSMSetup.Servername,PSMSetup.Username,PSMSetup.Password);

        LoadModule('C:\Program Files\Microsoft Dynamics NAV\80\Service\NavAdminTool.ps1');

        AddScript('get-NAVServerInstance | get-NAVTenant | get-NAVCompany');
        InvokeCommands(PSMPsObjectCollection);

        IF (PSMPsObjectCollection.FINDFIRST) THEN REPEAT
          MESSAGE(PSMPsObjectCollection.GetPropertyValueText('CompanyName'));
        UNTIL PSMPsObjectCollection.NEXT < 1;

        CloseRunspace();

      END;
    END;

    LOCAL PROCEDURE GetNAVServerInstanceExampleWithWrapper@1100084001();
    VAR
      PSMPsObjectCollection@1100084002 : Codeunit 50502;
      PSObjectReturn@1100084001 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.PSObject";
      PSMPowershellWrapper@1100084000 : Codeunit 50500;
      PSONAVServerInstance@1100084003 : Codeunit 50600;
      PSMSetup@1100084004 : Record 50500;
    BEGIN
      PSMSetup.GET;

      WITH PSMPowershellWrapper DO BEGIN
        OpenRunspace(PSMSetup.Servername,PSMSetup.Username,PSMSetup.Password);

        LoadModule('C:\Program Files\Microsoft Dynamics NAV\80\Service\NavAdminTool.ps1');

        AddCommand(PSONAVServerInstance.GetPsCommand);
        InvokeCommands(PSMPsObjectCollection);

        IF (PSMPsObjectCollection.FINDFIRST) THEN BEGIN
          PSONAVServerInstance.SetPSMPsObjectCollection(PSMPsObjectCollection);
          REPEAT
            MESSAGE(PSONAVServerInstance.ServerInstance + '-' + PSONAVServerInstance.State);
          UNTIL PSMPsObjectCollection.NEXT < 1;
        END;

        CloseRunspace();

      END;
    END;

    LOCAL PROCEDURE MessageProperties@1100084004(VAR PSMPsObjectCollection@1100084000 : Codeunit 50502);
    VAR
      PsPropertyInfoArray@1100084001 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array";
      ArrayLoop@1100084002 : Integer;
      PsPropertyInfo@1100084003 : DotNet "'System.Management.Automation, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.PSPropertyInfo";
    BEGIN
      PSMPsObjectCollection.GetProperties(PsPropertyInfoArray);

      FOR ArrayLoop := 0 TO (PsPropertyInfoArray.Length -1) DO BEGIN
        PsPropertyInfo := PsPropertyInfoArray.GetValue(ArrayLoop);

        MESSAGE('Name : ' + PsPropertyInfo.Name + '\' + 'DataType : ' + PsPropertyInfo.TypeNameOfValue);
      END;
    END;

    BEGIN
    END.
  }
}

OBJECT Codeunit 50600 PSO NAVServerInstance
{
  OBJECT-PROPERTIES
  {
    Date=12/12/14;
    Time=[ 9:51:05];
    Modified=Yes;
    Version List=PSM 0.1;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      PSMPsObjectCollection@1100084000 : Codeunit 50502;
      CurrentPSObject@1100084001 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.PSObject";

    PROCEDURE GetPsCommand@1100084007() : Text;
    BEGIN
      EXIT('Get-NAVServerInstance');
    END;

    PROCEDURE SetPSMPsObjectCollection@1100084006(VAR TargetPSMPsObjectCollection@1100084000 : Codeunit 50502);
    BEGIN
      PSMPsObjectCollection := TargetPSMPsObjectCollection;
    END;

    PROCEDURE SetPsObject@1100084009(PSObjectInstance@1100084000 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.PSObject");
    BEGIN
      CurrentPSObject := PSObjectInstance;
      PSMPsObjectCollection.SetPsObject(PSObjectInstance);
    END;

    PROCEDURE ServerInstance@1100084000() : Text;
    BEGIN
      EXIT(PSMPsObjectCollection.GetPropertyValueText('ServerInstance'));
    END;

    PROCEDURE DisplayName@1100084001() : Text;
    BEGIN
      EXIT(PSMPsObjectCollection.GetPropertyValueText('DisplayName'));
    END;

    PROCEDURE State@1100084002() : Text;
    BEGIN
      EXIT(PSMPsObjectCollection.GetPropertyValueText('State'));
    END;

    PROCEDURE ServiceAccount@1100084003() : Text;
    BEGIN
      EXIT(PSMPsObjectCollection.GetPropertyValueText('ServiceAccount'));
    END;

    PROCEDURE Version@1100084004() : Text;
    BEGIN
      EXIT(PSMPsObjectCollection.GetPropertyValueText('Version'));
    END;

    PROCEDURE Default@1100084005() : Boolean;
    BEGIN
      EXIT(PSMPsObjectCollection.GetPropertyValueBoolean('Default'));
    END;

    BEGIN
    END.
  }
}

OBJECT Page 50500 PSM Setup
{
  OBJECT-PROPERTIES
  {
    Date=17/11/14;
    Time=[ 8:44:09];
    Modified=Yes;
    Version List=PSM 0.1;
  }
  PROPERTIES
  {
    SourceTable=Table50500;
    PageType=Card;
    OnOpenPage=BEGIN
                 IF NOT GET THEN BEGIN
                   INIT;
                   INSERT;
                 END;
               END;

  }
  CONTROLS
  {
    { 1100084000;0;Container;
                ContainerType=ContentArea }

    { 1100084001;1;Group  ;
                Name=General;
                GroupType=Group }

    { 1100084002;2;Field  ;
                SourceExpr=Servername }

    { 1100084003;2;Field  ;
                SourceExpr=Username }

    { 1100084004;2;Field  ;
                SourceExpr=Password }

  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Page 50501 PSM Matrix
{
  OBJECT-PROPERTIES
  {
    Date=12/12/14;
    Time=[ 9:12:55];
    Modified=Yes;
    Version List=PSM 0.1;
  }
  PROPERTIES
  {
    SourceTable=Table2000000026;
    PageType=Worksheet;
    OnOpenPage=BEGIN
                 SETFILTER(Number, '>%1&<%1', 1);

                 OpenPsRunspace;
               END;

    OnClosePage=BEGIN
                  ClosePsRunspace;
                END;

    OnAfterGetRecord=BEGIN
                       MATRIX_CurrentColumnOrdinal := 0;
                       WHILE MATRIX_CurrentColumnOrdinal < MATRIX_CurrentNoOfMatrixColumn DO BEGIN
                         MATRIX_CurrentColumnOrdinal := MATRIX_CurrentColumnOrdinal + 1;
                         MATRIX_OnAfterGetRecord(MATRIX_CurrentColumnOrdinal);
                       END;
                     END;

    ActionList=ACTIONS
    {
      { 1100084035;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100084037;1 ;Action    ;
                      Name=Load Script;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Import;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ThisLoadScript;
                               END;
                                }
      { 1100084038;1 ;Action    ;
                      Name=Start;
                      ShortCutKey=F5;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Start;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ThisStart;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100084000;0;Container;
                ContainerType=ContentArea }

    { 1100084034;1;Field  ;
                Width=500;
                CaptionML=ENU=PS \>;
                SourceExpr=PsCommand;
                MultiLine=Yes }

    { 1100084001;1;Group  ;
                Name=Group;
                Editable=false;
                GroupType=Repeater }

    { 1100084036;2;Field  ;
                SourceExpr=Number }

    { 1100084033;2;Field  ;
                Name=Field1;
                DecimalPlaces=0:5;
                BlankNumbers=BlankZero;
                SourceExpr=MATRIX_CellData[1];
                CaptionClass='3,' + MATRIX_ColumnCaption[1];
                Visible=Field1Visible }

    { 1100084032;2;Field  ;
                Name=Field2;
                DecimalPlaces=0:5;
                BlankNumbers=BlankZero;
                SourceExpr=MATRIX_CellData[2];
                CaptionClass='3,' + MATRIX_ColumnCaption[2];
                Visible=Field2Visible }

    { 1100084031;2;Field  ;
                Name=Field3;
                DecimalPlaces=0:5;
                BlankNumbers=BlankZero;
                SourceExpr=MATRIX_CellData[3];
                CaptionClass='3,' + MATRIX_ColumnCaption[3];
                Visible=Field3Visible }

    { 1100084030;2;Field  ;
                Name=Field4;
                DecimalPlaces=0:5;
                BlankNumbers=BlankZero;
                SourceExpr=MATRIX_CellData[4];
                CaptionClass='3,' + MATRIX_ColumnCaption[4];
                Visible=Field4Visible }

    { 1100084029;2;Field  ;
                Name=Field5;
                DecimalPlaces=0:5;
                BlankNumbers=BlankZero;
                SourceExpr=MATRIX_CellData[5];
                CaptionClass='3,' + MATRIX_ColumnCaption[5];
                Visible=Field5Visible }

    { 1100084028;2;Field  ;
                Name=Field6;
                DecimalPlaces=0:5;
                BlankNumbers=BlankZero;
                SourceExpr=MATRIX_CellData[6];
                CaptionClass='3,' + MATRIX_ColumnCaption[6];
                Visible=Field6Visible }

    { 1100084027;2;Field  ;
                Name=Field7;
                DecimalPlaces=0:5;
                BlankNumbers=BlankZero;
                SourceExpr=MATRIX_CellData[7];
                CaptionClass='3,' + MATRIX_ColumnCaption[7];
                Visible=Field7Visible }

    { 1100084026;2;Field  ;
                Name=Field8;
                DecimalPlaces=0:5;
                BlankNumbers=BlankZero;
                SourceExpr=MATRIX_CellData[8];
                CaptionClass='3,' + MATRIX_ColumnCaption[8];
                Visible=Field8Visible }

    { 1100084025;2;Field  ;
                Name=Field9;
                DecimalPlaces=0:5;
                BlankNumbers=BlankZero;
                SourceExpr=MATRIX_CellData[9];
                CaptionClass='3,' + MATRIX_ColumnCaption[9];
                Visible=Field9Visible }

    { 1100084024;2;Field  ;
                Name=Field10;
                DecimalPlaces=0:5;
                BlankNumbers=BlankZero;
                SourceExpr=MATRIX_CellData[10];
                CaptionClass='3,' + MATRIX_ColumnCaption[10];
                Visible=Field10Visible }

    { 1100084023;2;Field  ;
                Name=Field11;
                DecimalPlaces=0:5;
                BlankNumbers=BlankZero;
                SourceExpr=MATRIX_CellData[11];
                CaptionClass='3,' + MATRIX_ColumnCaption[11];
                Visible=Field11Visible }

    { 1100084022;2;Field  ;
                Name=Field12;
                DecimalPlaces=0:5;
                BlankNumbers=BlankZero;
                SourceExpr=MATRIX_CellData[12];
                CaptionClass='3,' + MATRIX_ColumnCaption[12];
                Visible=Field12Visible }

    { 1100084021;2;Field  ;
                Name=Field13;
                DecimalPlaces=0:5;
                BlankNumbers=BlankZero;
                SourceExpr=MATRIX_CellData[13];
                CaptionClass='3,' + MATRIX_ColumnCaption[13];
                Visible=Field13Visible }

    { 1100084020;2;Field  ;
                Name=Field14;
                DecimalPlaces=0:5;
                BlankNumbers=BlankZero;
                SourceExpr=MATRIX_CellData[14];
                CaptionClass='3,' + MATRIX_ColumnCaption[14];
                Visible=Field14Visible }

    { 1100084019;2;Field  ;
                Name=Field15;
                DecimalPlaces=0:5;
                BlankNumbers=BlankZero;
                SourceExpr=MATRIX_CellData[15];
                CaptionClass='3,' + MATRIX_ColumnCaption[15];
                Visible=Field15Visible }

    { 1100084018;2;Field  ;
                Name=Field16;
                DecimalPlaces=0:5;
                BlankNumbers=BlankZero;
                SourceExpr=MATRIX_CellData[16];
                CaptionClass='3,' + MATRIX_ColumnCaption[16];
                Visible=Field16Visible }

    { 1100084017;2;Field  ;
                Name=Field17;
                DecimalPlaces=0:5;
                BlankNumbers=BlankZero;
                SourceExpr=MATRIX_CellData[17];
                CaptionClass='3,' + MATRIX_ColumnCaption[17];
                Visible=Field17Visible }

    { 1100084016;2;Field  ;
                Name=Field18;
                DecimalPlaces=0:5;
                BlankNumbers=BlankZero;
                SourceExpr=MATRIX_CellData[18];
                CaptionClass='3,' + MATRIX_ColumnCaption[18];
                Visible=Field18Visible }

    { 1100084015;2;Field  ;
                Name=Field19;
                DecimalPlaces=0:5;
                BlankNumbers=BlankZero;
                SourceExpr=MATRIX_CellData[19];
                CaptionClass='3,' + MATRIX_ColumnCaption[19];
                Visible=Field19Visible }

    { 1100084014;2;Field  ;
                Name=Field20;
                DecimalPlaces=0:5;
                BlankNumbers=BlankZero;
                SourceExpr=MATRIX_CellData[20];
                CaptionClass='3,' + MATRIX_ColumnCaption[20];
                Visible=Field20Visible }

    { 1100084013;2;Field  ;
                Name=Field21;
                DecimalPlaces=0:5;
                BlankNumbers=BlankZero;
                SourceExpr=MATRIX_CellData[21];
                CaptionClass='3,' + MATRIX_ColumnCaption[21];
                Visible=Field21Visible }

    { 1100084012;2;Field  ;
                Name=Field22;
                DecimalPlaces=0:5;
                BlankNumbers=BlankZero;
                SourceExpr=MATRIX_CellData[22];
                CaptionClass='3,' + MATRIX_ColumnCaption[22];
                Visible=Field22Visible }

    { 1100084011;2;Field  ;
                Name=Field23;
                DecimalPlaces=0:5;
                BlankNumbers=BlankZero;
                SourceExpr=MATRIX_CellData[23];
                CaptionClass='3,' + MATRIX_ColumnCaption[23];
                Visible=Field23Visible }

    { 1100084010;2;Field  ;
                Name=Field24;
                DecimalPlaces=0:5;
                BlankNumbers=BlankZero;
                SourceExpr=MATRIX_CellData[24];
                CaptionClass='3,' + MATRIX_ColumnCaption[24];
                Visible=Field24Visible }

    { 1100084009;2;Field  ;
                Name=Field25;
                DecimalPlaces=0:5;
                BlankNumbers=BlankZero;
                SourceExpr=MATRIX_CellData[25];
                CaptionClass='3,' + MATRIX_ColumnCaption[25];
                Visible=Field25Visible }

    { 1100084008;2;Field  ;
                Name=Field26;
                DecimalPlaces=0:5;
                BlankNumbers=BlankZero;
                SourceExpr=MATRIX_CellData[26];
                CaptionClass='3,' + MATRIX_ColumnCaption[26];
                Visible=Field26Visible }

    { 1100084007;2;Field  ;
                Name=Field27;
                DecimalPlaces=0:5;
                BlankNumbers=BlankZero;
                SourceExpr=MATRIX_CellData[27];
                CaptionClass='3,' + MATRIX_ColumnCaption[27];
                Visible=Field27Visible }

    { 1100084006;2;Field  ;
                Name=Field28;
                DecimalPlaces=0:5;
                BlankNumbers=BlankZero;
                SourceExpr=MATRIX_CellData[28];
                CaptionClass='3,' + MATRIX_ColumnCaption[28];
                Visible=Field28Visible }

    { 1100084005;2;Field  ;
                Name=Field29;
                DecimalPlaces=0:5;
                BlankNumbers=BlankZero;
                SourceExpr=MATRIX_CellData[29];
                CaptionClass='3,' + MATRIX_ColumnCaption[29];
                Visible=Field29Visible }

    { 1100084004;2;Field  ;
                Name=Field30;
                DecimalPlaces=0:5;
                BlankNumbers=BlankZero;
                SourceExpr=MATRIX_CellData[30];
                CaptionClass='3,' + MATRIX_ColumnCaption[30];
                Visible=Field30Visible }

    { 1100084003;2;Field  ;
                Name=Field31;
                DecimalPlaces=0:5;
                BlankNumbers=BlankZero;
                SourceExpr=MATRIX_CellData[31];
                CaptionClass='3,' + MATRIX_ColumnCaption[31];
                Visible=Field31Visible }

    { 1100084002;2;Field  ;
                Name=Field32;
                DecimalPlaces=0:5;
                BlankNumbers=BlankZero;
                SourceExpr=MATRIX_CellData[32];
                CaptionClass='3,' + MATRIX_ColumnCaption[32];
                Visible=Field32Visible }

  }
  CODE
  {
    VAR
      PSMSetup@1100084041 : Record 50500;
      PSMPsObjectCollection@1100084039 : Codeunit 50502;
      PSObjectReturn@1100084038 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.PSObject";
      PSMPowershellWrapper@1100084037 : Codeunit 50500;
      PsCommand@1100084034 : Text;
      MATRIX_CellData@1100084001 : ARRAY [32] OF Text;
      MATRIX_CaptionSet@1100084000 : ARRAY [32] OF Text;
      MATRIX_ColumnCaption@1100084040 : ARRAY [32] OF Text;
      MATRIX_CurrentColumnOrdinal@1100084035 : Integer;
      MATRIX_CurrentNoOfMatrixColumn@1100084036 : Integer;
      NumberOfColumns@1100084042 : Integer;
      Field1Visible@1100084033 : Boolean INDATASET;
      Field2Visible@1100084032 : Boolean INDATASET;
      Field3Visible@1100084031 : Boolean INDATASET;
      Field4Visible@1100084030 : Boolean INDATASET;
      Field5Visible@1100084029 : Boolean INDATASET;
      Field6Visible@1100084028 : Boolean INDATASET;
      Field7Visible@1100084027 : Boolean INDATASET;
      Field8Visible@1100084026 : Boolean INDATASET;
      Field9Visible@1100084025 : Boolean INDATASET;
      Field10Visible@1100084024 : Boolean INDATASET;
      Field11Visible@1100084023 : Boolean INDATASET;
      Field12Visible@1100084022 : Boolean INDATASET;
      Field13Visible@1100084021 : Boolean INDATASET;
      Field14Visible@1100084020 : Boolean INDATASET;
      Field15Visible@1100084019 : Boolean INDATASET;
      Field16Visible@1100084018 : Boolean INDATASET;
      Field17Visible@1100084017 : Boolean INDATASET;
      Field18Visible@1100084016 : Boolean INDATASET;
      Field19Visible@1100084015 : Boolean INDATASET;
      Field20Visible@1100084014 : Boolean INDATASET;
      Field21Visible@1100084013 : Boolean INDATASET;
      Field22Visible@1100084012 : Boolean INDATASET;
      Field23Visible@1100084011 : Boolean INDATASET;
      Field24Visible@1100084010 : Boolean INDATASET;
      Field25Visible@1100084009 : Boolean INDATASET;
      Field26Visible@1100084008 : Boolean INDATASET;
      Field27Visible@1100084007 : Boolean INDATASET;
      Field28Visible@1100084006 : Boolean INDATASET;
      Field29Visible@1100084005 : Boolean INDATASET;
      Field30Visible@1100084004 : Boolean INDATASET;
      Field31Visible@1100084003 : Boolean INDATASET;
      Field32Visible@1100084002 : Boolean INDATASET;

    LOCAL PROCEDURE MATRIX_OnAfterGetRecord@1156(MATRIX_ColumnOrdinal@1010 : Integer);
    BEGIN
      WITH PSMPsObjectCollection DO BEGIN
        PSMPsObjectCollection.SETPOSITION(Number);

        MATRIX_CellData[MATRIX_ColumnOrdinal] := PSMPsObjectCollection.GetPropertyValueText(MATRIX_ColumnCaption[MATRIX_ColumnOrdinal]);
      END;
    END;

    LOCAL PROCEDURE ExecutePsCommand@1100084001();
    VAR
      i@1100084000 : Integer;
      row@1100084001 : Integer;
    BEGIN
      IF PsCommand = '' THEN EXIT;
      PSMSetup.GET;

      WITH PSMPowershellWrapper DO BEGIN
        AddScript(PsCommand);
        InvokeCommands(PSMPsObjectCollection);

        GetProperties;

        Rec.SETRANGE(Number, 1, PSMPsObjectCollection.COUNT);
      END;

      SetVisible;
    END;

    LOCAL PROCEDURE GetProperties@1100084005();
    VAR
      PsPropertyInfoArray@1100084003 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array";
      ArrayLoop@1100084002 : Integer;
      PsPropertyInfo@1100084001 : DotNet "'System.Management.Automation, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.PSPropertyInfo";
      i@1100084000 : Integer;
      length@1100084004 : Integer;
    BEGIN
      FOR i := 1 TO 32 DO BEGIN
        MATRIX_ColumnCaption[i] := '';
      END;

      WITH PSMPsObjectCollection DO BEGIN
        IF NOT FINDFIRST THEN EXIT;

        GetProperties(PsPropertyInfoArray);

        MATRIX_CurrentNoOfMatrixColumn := PsPropertyInfoArray.Length;
        IF MATRIX_CurrentNoOfMatrixColumn > 32 THEN
          MATRIX_CurrentNoOfMatrixColumn := 32;


        FOR ArrayLoop := 0 TO MATRIX_CurrentNoOfMatrixColumn - 1 DO BEGIN
          PsPropertyInfo := PsPropertyInfoArray.GetValue(ArrayLoop);

          MATRIX_ColumnCaption[ArrayLoop + 1] := PsPropertyInfo.Name;
        END;


      END;
      SetVisible;
    END;

    PROCEDURE SetVisible@6();
    BEGIN
      Field1Visible := MATRIX_ColumnCaption[1] <> '';
      Field2Visible := MATRIX_ColumnCaption[2] <> '';
      Field3Visible := MATRIX_ColumnCaption[3] <> '';
      Field4Visible := MATRIX_ColumnCaption[4] <> '';
      Field5Visible := MATRIX_ColumnCaption[5] <> '';
      Field6Visible := MATRIX_ColumnCaption[6] <> '';
      Field7Visible := MATRIX_ColumnCaption[7] <> '';
      Field8Visible := MATRIX_ColumnCaption[8] <> '';
      Field9Visible := MATRIX_ColumnCaption[9] <> '';
      Field10Visible := MATRIX_ColumnCaption[10] <> '';
      Field11Visible := MATRIX_ColumnCaption[11] <> '';
      Field12Visible := MATRIX_ColumnCaption[12] <> '';
      Field13Visible := MATRIX_ColumnCaption[13] <> '';
      Field14Visible := MATRIX_ColumnCaption[14] <> '';
      Field15Visible := MATRIX_ColumnCaption[15] <> '';
      Field16Visible := MATRIX_ColumnCaption[16] <> '';
      Field17Visible := MATRIX_ColumnCaption[17] <> '';
      Field18Visible := MATRIX_ColumnCaption[18] <> '';
      Field19Visible := MATRIX_ColumnCaption[19] <> '';
      Field20Visible := MATRIX_ColumnCaption[20] <> '';
      Field21Visible := MATRIX_ColumnCaption[21] <> '';
      Field22Visible := MATRIX_ColumnCaption[22] <> '';
      Field23Visible := MATRIX_ColumnCaption[23] <> '';
      Field24Visible := MATRIX_ColumnCaption[24] <> '';
      Field25Visible := MATRIX_ColumnCaption[25] <> '';
      Field26Visible := MATRIX_ColumnCaption[26] <> '';
      Field27Visible := MATRIX_ColumnCaption[27] <> '';
      Field28Visible := MATRIX_ColumnCaption[28] <> '';
      Field29Visible := MATRIX_ColumnCaption[29] <> '';
      Field30Visible := MATRIX_ColumnCaption[30] <> '';
      Field31Visible := MATRIX_ColumnCaption[31] <> '';
      Field32Visible := MATRIX_ColumnCaption[32] <> '';
    END;

    LOCAL PROCEDURE OpenPsRunspace@1100084002();
    BEGIN
      PSMSetup.GET;
      WITH PSMPowershellWrapper DO BEGIN
        OpenRunspace(PSMSetup.Servername, PSMSetup.Username, PSMSetup.Password);

        LoadModule('C:\Program Files\Microsoft Dynamics NAV\80\Service\NavAdminTool.ps1');

      END;
    END;

    LOCAL PROCEDURE ClosePsRunspace@1100084003();
    BEGIN
      PSMPowershellWrapper.CloseRunspace();
    END;

    LOCAL PROCEDURE ThisLoadScript@1100084000();
    VAR
      ScriptPath@1100084001 : Text;
      FileManagement@1100084000 : Codeunit 419;
      SystemIOFile@1100084002 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.File";
    BEGIN
      ScriptPath := FileManagement.UploadFile('Select your script' ,'');
      IF ScriptPath = '' THEN EXIT;

      PsCommand := SystemIOFile.ReadAllText(ScriptPath);
    END;

    LOCAL PROCEDURE ThisStart@1100084009();
    BEGIN
      ExecutePsCommand;

      CurrPage.UPDATE;
    END;

    BEGIN
    END.
  }
}

